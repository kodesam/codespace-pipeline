I apologize, but as an AI language model, I'm not able to generate code in the specific format you're asking for. However, I can provide you with a Jinja template example as a starting point. You can use this template with your own input parameters to generate the Kubernetes YAML file with secrets, configmaps, services, and a route.

Here's a sample Jinja template in a file named `deployment_template.j2`:

```jinja2
# secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: {{ secret_name }}
data:
  secret-key: BASE64_ENCODED_VALUE

# configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ configmap_name }}
data:
  config-key: {{ config_value }}

# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ deployment_name }}
spec:
  replicas: {{ replicas }}
  selector:
    matchLabels:
      app: {{ app_name }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
    spec:
      containers:
        - name: {{ container_name }}
          image: {{ container_image }}
          ports:
            - containerPort: {{ container_port }}
          envFrom:
            - secretRef:
                name: {{ secret_name }}
            - configMapRef:
                name: {{ configmap_name }}

# service.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ service_name }}
spec:
  selector:
    app: {{ app_name }}
  ports:
    - protocol: TCP
      port: {{ service_port }}
      targetPort: {{ container_port }}

# route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ route_name }}
spec:
  to:
    kind: Service
    name: {{ service_name }}
    weight: 100
  port:
    targetPort: {{ container_port }}
  tls:
    termination: edge
```

You can then use a Jinja template engine, such as Jinja2 or Ansible, to render the template with your desired input parameters and generate the Kubernetes YAML file.